[{"title":"PathEZ","type":0,"sectionRef":"#","url":"/PathEZ/api/PathEZ","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PathEZ","url":"/PathEZ/api/PathEZ#functions","content":" "},{"title":"new​","type":1,"pageTitle":"PathEZ","url":"/PathEZ/api/PathEZ#new","content":"&lt;/&gt; PathEZ.new( agent: Model , agentParams: AgentParameters?, computationSettings: GlobalComputationSettings? ) → PathEZPath Constructor for PathEZ  "},{"title":"ComputeAndGetWaypoints​","type":1,"pageTitle":"PathEZ","url":"/PathEZ/api/PathEZ#ComputeAndGetWaypoints","content":"&lt;/&gt; PathEZ.ComputeAndGetWaypoints( path: Path , startPoint: Vector3 , finishPoint: Vector3 ) → Promise Computes waypoints for a given path. Technically a wrapper for PathfindingService's ComputeAsync and GetWaypoints. local path = PathEZ.new(agent) local start = Vector3.new(0,0,0) local finish = player.Character.Position --first value from await() is promise's Status, which we don't need in this situation local _, waypoints = PathEZ.ComputeAndGetWaypoints(path.GeneratedPath, start, finish):catch(warn):await() if waypoints then for _, waypoint in waypoints do doSomething(waypoint) end end Retruns a promise, which resolves with computed waypoints or rejects with a NoPath status. "},{"title":"PathEZPath","type":0,"sectionRef":"#","url":"/PathEZ/api/PathEZPath","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PathEZPath","url":"/PathEZ/api/PathEZPath#functions","content":" "},{"title":"MoveTo​","type":1,"pageTitle":"PathEZPath","url":"/PathEZ/api/PathEZPath#MoveTo","content":"&lt;/&gt; PathEZPath:MoveTo( place: Vector3 | Model | BasePart , moveSettings: MoveSettings? ) → boolean Move agent to a given place. Place can be Vector3 | Model | BasePart local path = PathEZ.new(agent) local character = player.Character path:MoveTo(character)   "},{"title":"Follow​","type":1,"pageTitle":"PathEZPath","url":"/PathEZ/api/PathEZPath#Follow","content":"&lt;/&gt; PathEZPath:Follow( target: Player | Model | BasePart , moveSettings: MoveSettings ) → table Makes agent follow a target. Targe can be Player | Model | BasePart local path = PathEZ.new(agent) path:Follow(player)   "},{"title":"StopFollowing​","type":1,"pageTitle":"PathEZPath","url":"/PathEZ/api/PathEZPath#StopFollowing","content":"&lt;/&gt; PathEZPath:StopFollowing() → () Stops agent from following a target local path = PathEZ.new(agent) path:Follow(player) task.wait(6) path:StopFollowing()   "},{"title":"Destroy​","type":1,"pageTitle":"PathEZPath","url":"/PathEZ/api/PathEZPath#Destroy","content":"&lt;/&gt; PathEZPath:Destroy() → () Destroys a PathEZPath local path = PathEZ.new(agent) path:Follow(player) task.wait(6) path:StopFollowing() path:Destroy()  "}]