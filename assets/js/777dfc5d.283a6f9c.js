"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[79],{21211:t=>{t.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructor for PathEZ","params":[{"name":"agent","desc":"","lua_type":"Model"},{"name":"agentParams","desc":"","lua_type":"AgentParameters?"},{"name":"computationSettings","desc":"","lua_type":"GlobalComputationSettings?"}],"returns":[{"desc":"","lua_type":"PathEZPath"}],"function_type":"static","source":{"line":66,"path":"src/ReplicatedStorage/PathEZ/init.lua"}},{"name":"ComputeAndGetWaypoints","desc":"Computes waypoints for a given path. Technically a wrapper for PathfindingService\'s ComputeAsync and GetWaypoints.\\n\\n```lua\\nlocal path = PathEZ.new(agent)\\n\\nlocal start = Vector3.new(0,0,0)\\nlocal finish = player.Character.Position\\n\\n--first value from await() is promise\'s Status, which we don\'t need in this situation\\nlocal _, waypoints = PathEZ.ComputeAndGetWaypoints(path.GeneratedPath, start, finish):catch(warn):await()\\n\\nif waypoints then\\n\\tfor _, waypoint in waypoints do\\n\\t\\tdoSomething(waypoint)\\n\\tend\\nend\\n```\\nRetruns a promise, which resolves with computed waypoints or rejects with a NoPath status.","params":[{"name":"path","desc":"","lua_type":"Path"},{"name":"startPoint","desc":"","lua_type":"Vector3"},{"name":"finishPoint","desc":"","lua_type":"Vector3"}],"returns":[{"desc":"","lua_type":"Promise"}],"function_type":"static","source":{"line":102,"path":"src/ReplicatedStorage/PathEZ/init.lua"}}],"properties":[],"types":[],"name":"PathEZ","desc":"PathEZ helps developers to easily use Pathdinding Service","source":{"line":37,"path":"src/ReplicatedStorage/PathEZ/init.lua"}}')}}]);